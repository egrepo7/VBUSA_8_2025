{"version":3,"sources":["webpack:///./assets/js/theme/product.js","webpack:///./assets/js/theme/product/video-gallery.js","webpack:///./assets/js/theme/custom/its-product.js","webpack:///./assets/js/theme/custom/dual-panel-scroll.js","webpack:///./assets/js/theme/custom/split-layout-carousel.js","webpack:///./assets/js/theme/custom/mobile-sticky-cart-validator.js","webpack:///./assets/js/theme/product/image-gallery.js"],"names":["Product","_PageManager","context","_this","call","url","window","location","href","$reviewLink","$","$bulkPricingLink","reviewModal","modalFactory","_proto","prototype","onReady","_document$querySelect","_this2","removeHiddenProductForm","innerWidth","desktopForm","document","querySelector","remove","mobileForm","validator","$inlinePanel","productView","MutationObserver","mutations","observe","childList","subtree","syncProductOptions","sourceFormSelector","targetFormSelector","$source","$target","find","each","name","this","attr","type","is","val","prop","trigger","updateInlineStickyCartPrice","inlinePrice","stickyPrice","innerHTML","addEventListener","on","indexOf","history","replaceState","title","pathname","collapsibleFactory","oldId","endsWith","newId","productDetails","ProductDetails","BCData","product_attributes","setProductVariant","length","productDetailsInline","e","setTimeout","inlinePriceEl","videoGallery","bulkPricingHandler","$reviewForm","classifyForm","ITSProduct","dualPanelScroll","DualPanelScroll","splitLayoutCarousel","SplitLayoutCarousel","mobileStickyCartValidator","MobileStickyCartValidator","review","Review","registerValidation","ariaDescribeReviewInputs","performCheck","areAll","productReviewHandler","updateStickyCartPrice","target","closest","mainPrice","updateInlinePanelPrice","mainPriceInline","mainWithTax","mainWithoutTax","stickyWithTax","stickyWithoutTax","inlinePanel","$form","_","input","$input","msgSpanId","siblings","PageManager","VideoGallery","$element","$player","$videos","currentVideo","bindEvents","selectNewVideo","preventDefault","currentTarget","id","data","$selectedThumb","setMainVideo","setActiveThumb","removeClass","addClass","bind","index","element","$el","NaturalDualPanel","container","detailsPanel","isDesktop","matchMedia","matches","init","body","style","overflow","handleResize","setupStickyBehavior","setupQuantitySelector","enableMobileLayout","position","top","wasDesktop","customVolleyballNetsPage","blockAllCarousels","emergencyCarouselProtection","console","log","destroy","update","initCarouselOverride","setupPreInitialization","ready","enforceVerticalLayout","setupNavigationHandlers","setupMainImageSwipe","readyState","preInitializeLayout","interceptSlickInitialization","originalSlick","fn","slick","self","options","hasClass","applyImmediateLayoutFixes","splitLayoutOptions","Object","assign","infinite","arrows","dots","variableWidth","adaptiveHeight","slidesToShow","slidesToScroll","vertical","verticalSwiping","centerMode","focusOnSelect","responsive","breakpoint","settings","horizontal","result","keys","forEach","key","_this3","$splitLayout","$thumbnails","event","setupThumbnailClickHandlers","disableThumbnailHover","isMobile","selector","setAttribute","_this4","$slickTrack","removeInlineWidths","removeProperty","observer","attributes","attributeFilter","setupMobileHandlers","_this5","off","$container","containerRect","getBoundingClientRect","clickY","clientY","containerTop","containerBottom","bottom","upArrowBottom","downArrowTop","$currentSplitLayout","updateScrollArrowVisibility","$thumb","$upOverlay","$downOverlay","css","append","stopPropagation","$slickList","currentScrollTop","scrollTop","newScrollTop","Math","max","animate","maxScrollTop","scrollHeight","outerHeight","min","error","slickData","currentSlide","slideCount","_this6","clickX","clientX","left","rightArrowZone","width","currentScrollLeft","scrollLeft","newScrollLeft","updateMobileArrowVisibility","maxScrollLeft","scrollWidth","outerWidth","clientWidth","_this7","imageGallery","selectNewImage","changeMainImageManually","stopImmediatePropagation","$mainImage","$mainImageContainer","newImageUrl","newImageSrcset","zoomImageUrl","imageAlt","imageIndex","src","srcset","alt","$zoomContainer","_this8","startX","startY","isScrolling","touch","originalEvent","touches","deltaX","deltaY","abs","translateX","changedTouches","navigateToImage","mouseDown","mouseStartX","mouseStartY","direction","$allThumbnails","$currentActive","filter","$nextThumbnail","first","currentIndex","nextIndex","eq","prevIndex","clickEvent","Event","testSwipe","setupClickHandler","setupGlobalFunctions","formId","validateForm","submit","scrollToFirstValidationError","$errorField","smoothScrollToElement","$unselectedRequired","$select","isRequired","text","toLowerCase","includes","undefined","isUnselected","elementName","targetScroll","offset","duration","easing","start","complete","showRequiredOptionsNotification","$notification","hide","fadeIn","fadeOut","testNotification","tries","interval","setInterval","product_images","$mainImageDesktop","images","$slick","img","$slide","$figure","$a","url_zoom","$img","after","speed","initMainImageSlick","clearInterval"],"mappings":"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","file":"theme-bundle.chunk.1.js","sourcesContent":["/*\n Import all product specific js\n */\nimport PageManager from './page-manager';\nimport Review from './product/reviews';\nimport collapsibleFactory from './common/collapsible';\nimport ProductDetails from './common/product-details';\nimport videoGallery from './product/video-gallery';\nimport { classifyForm } from './common/utils/form-utils';\nimport modalFactory from './global/modal';\nimport ITSProduct from './custom/its-product';\nimport DualPanelScroll from './custom/dual-panel-scroll';\nimport SplitLayoutCarousel from './custom/split-layout-carousel';\nimport MobileStickyCartValidator from './custom/mobile-sticky-cart-validator';\nimport './product/image-gallery';\n\nexport default class Product extends PageManager {\n    constructor(context) {\n        super(context);\n        this.url = window.location.href;\n        this.$reviewLink = $('[data-reveal-id=\"modal-review-form\"]');\n        this.$bulkPricingLink = $('[data-reveal-id=\"modal-bulk-pricing\"]');\n        this.reviewModal = modalFactory('#modal-review-form')[0];\n    }\n\n    onReady() {\n        // Remove hidden product form (mobile or desktop) from the DOM, robust for AJAX/Stencil swaps\n        function removeHiddenProductForm() {\n            var isMobile = window.innerWidth <= 1024;\n            if (isMobile) {\n                // Remove desktop form\n                var desktopForm = document.querySelector('.details-panel .productView-options form');\n                if (desktopForm) desktopForm.remove();\n            } else {\n                // Remove mobile form\n                var mobileForm = document.querySelector('.details-panel-inline .productView-options form');\n                if (mobileForm) mobileForm.remove();\n            }\n        }\n\n        // Initial run\n        removeHiddenProductForm();\n\n        // MutationObserver to watch for DOM changes in the product details area\n        var productView = document.querySelector('.productView');\n        if (productView) {\n            var observer = new MutationObserver(function(mutations) {\n                // Remove hidden form whenever DOM changes\n                removeHiddenProductForm();\n            });\n            observer.observe(productView, { childList: true, subtree: true });\n        }\n\n        // Also run on resize\n        window.addEventListener('resize', function() {\n            // Only run if both forms are present\n            var desktopForm = document.querySelector('.details-panel .productView-options form');\n            var mobileForm = document.querySelector('.details-panel-inline .productView-options form');\n            if (desktopForm && mobileForm) removeHiddenProductForm();\n        });\n\n        // Listen for foundation modal close events to sanitize URL after review.\n        $(document).on('close.fndtn.reveal', () => {\n            if (this.url.indexOf('#write_review') !== -1 && typeof window.history.replaceState === 'function') {\n                window.history.replaceState(null, document.title, window.location.pathname);\n            }\n        });\n\n        let validator;\n\n        // Init collapsible\n        collapsibleFactory();\n\n        // Fix duplicate IDs in details-panel-inline by appending '-inline' to all IDs and updating label 'for' attributes\n        function fixInlinePanelIds() {\n            const $inlinePanel = $('.details-panel-inline');\n            $inlinePanel.find('[id]').each(function() {\n                const oldId = $(this).attr('id');\n                if (!oldId.endsWith('-inline')) {\n                    const newId = oldId + '-inline';\n                    // Update the element's ID\n                    $(this).attr('id', newId);\n                    // Update any label referencing this ID\n                    $inlinePanel.find(`label[for=\"${oldId}\"]`).attr('for', newId);\n                }\n            });\n        }\n        fixInlinePanelIds();\n\n        this.productDetails = new ProductDetails($('.productView'), this.context, window.BCData.product_attributes);\n        this.productDetails.setProductVariant();\n\n        // Inline/mobile panel\n        if ($('.details-panel-inline').length) {\n            this.productDetailsInline = new ProductDetails($('.details-panel-inline'), this.context, window.BCData.product_attributes);\n            this.productDetailsInline.setProductVariant();\n        }\n\n        // --- Sync product options between main and inline forms ---\n        function syncProductOptions(sourceFormSelector, targetFormSelector) {\n            const $source = $(sourceFormSelector);\n            const $target = $(targetFormSelector);\n            $source.find('[name]').each(function() {\n                const name = $(this).attr('name');\n                // For radio/checkbox, sync checked state; for others, sync value\n                const type = $(this).attr('type');\n                if (type === 'radio' || type === 'checkbox') {\n                    if ($(this).is(':checked')) {\n                        $target.find(`[name=\"${name}\"][value=\"${$(this).val()}\"]`).prop('checked', true).trigger('change');\n                    }\n                } else {\n                    $target.find(`[name=\"${name}\"]`).val($(this).val()).trigger('change');\n                }\n            });\n        }\n        $('#productOptionsForm').on('change', function() {\n            syncProductOptions('#productOptionsForm', '#productOptionsForm-inline');\n        });\n        $('#productOptionsForm-inline').on('change', function() {\n            syncProductOptions('#productOptionsForm-inline', '#productOptionsForm');\n        });\n\n        // --- Update price in sticky cart section for inline panel ---\n        function updateInlineStickyCartPrice() {\n            // Get the updated price from the inline panel\n            var inlinePrice = document.querySelector('.details-panel-inline .productView-price');\n            var stickyPrice = document.querySelector('.sticky-cart-section-mobile .sticky-cart-product-price');\n            if (inlinePrice && stickyPrice) {\n                stickyPrice.innerHTML = inlinePrice.innerHTML;\n            }\n        }\n        // Run once on page load\n        updateInlineStickyCartPrice();\n        // Run whenever product options change in inline panel\n        document.querySelector('#productOptionsForm-inline')?.addEventListener('change', function(e) {\n            setTimeout(updateInlineStickyCartPrice, 100);\n        });\n        // Also observe for price changes in inline panel (in case price updates via AJAX)\n        var inlinePriceEl = document.querySelector('.details-panel-inline .productView-price');\n        if (inlinePriceEl) {\n            var observerInlineSticky = new MutationObserver(updateInlineStickyCartPrice);\n            observerInlineSticky.observe(inlinePriceEl, { childList: true, subtree: true });\n        }\n\n        videoGallery();\n\n        this.bulkPricingHandler();\n\n        const $reviewForm = classifyForm('.writeReview-form');\n\n        this.ITSProduct = new ITSProduct(this.context);\n        \n        // Initialize dual-panel scroll synchronization for split layout\n        this.dualPanelScroll = new DualPanelScroll();\n        \n        // Initialize split layout carousel override\n        this.splitLayoutCarousel = new SplitLayoutCarousel();\n        \n        // Initialize mobile sticky cart validator (scroll-to-error + popup notification)\n        this.mobileStickyCartValidator = new MobileStickyCartValidator();\n        \n        if ($reviewForm.length === 0) return;\n\n        const review = new Review({ $reviewForm });\n\n        $('body').on('click', '[data-reveal-id=\"modal-review-form\"]', () => {\n            validator = review.registerValidation(this.context);\n            this.ariaDescribeReviewInputs($reviewForm);\n        });\n\n        $reviewForm.on('submit', () => {\n            if (validator) {\n                validator.performCheck();\n                return validator.areAll('valid');\n            }\n\n            return false;\n        });\n\n        this.productReviewHandler();\n\n        // --- Sticky Cart Price Sync (Improved) ---\n        function updateStickyCartPrice() {\n            // Main price area\n            var mainWithTax = document.querySelector('.productView .price--withTax');\n            var mainWithoutTax = document.querySelector('.productView .price--withoutTax');\n            // Sticky cart area\n            var stickyWithTax = document.querySelector('.sticky-cart-product-price .price--withTax');\n            var stickyWithoutTax = document.querySelector('.sticky-cart-product-price .price--withoutTax');\n        \n            if (mainWithTax && stickyWithTax) {\n                stickyWithTax.innerHTML = mainWithTax.innerHTML;\n            }\n            if (mainWithoutTax && stickyWithoutTax) {\n                stickyWithoutTax.innerHTML = mainWithoutTax.innerHTML;\n            }\n        }\n\n        // Run once on page load\n        updateStickyCartPrice();\n\n        // Run whenever product options change\n        document.addEventListener('change', function(e) {\n            if (e.target.closest('.productView-options')) {\n                setTimeout(updateStickyCartPrice, 100);\n            }\n        });\n\n        // Also observe for price changes (in case price updates via AJAX)\n        var mainPrice = document.querySelector('.productView-price');\n        if (mainPrice) {\n            var observerPrice = new MutationObserver(updateStickyCartPrice);\n            observerPrice.observe(mainPrice, { childList: true, subtree: true });\n        }\n\n        // --- Sync data-product-price-without-tax in .details-panel-inline ---\n        function updateInlinePanelPrice() {\n            // Always copy from desktop/main panel to inline/mobile panel\n            var mainPrice = document.querySelector('.details-panel .productView-price [data-product-price-without-tax]');\n            var inlinePanel = document.querySelector('.details-panel-inline .productView-price [data-product-price-without-tax]');\n            if (mainPrice && inlinePanel) {\n                inlinePanel.innerHTML = mainPrice.innerHTML;\n            }\n        }\n\n        // Run once on page load\n        updateInlinePanelPrice();\n\n        // Run whenever product options change\n        document.addEventListener('change', function(e) {\n            if (e.target.closest('.productView-options')) {\n                setTimeout(updateInlinePanelPrice, 100);\n            }\n        });\n\n        // Also observe for price changes (in case price updates via AJAX)\n        var mainPriceInline = document.querySelector('.details-panel .productView-price [data-product-price-without-tax]');\n        if (mainPriceInline) {\n            var observerInline = new MutationObserver(updateInlinePanelPrice);\n            observerInline.observe(mainPriceInline, { childList: true, subtree: true });\n        }\n    }\n\n    ariaDescribeReviewInputs($form) {\n        $form.find('[data-input]').each((_, input) => {\n            const $input = $(input);\n            const msgSpanId = `${$input.attr('name')}-msg`;\n\n            $input.siblings('span').attr('id', msgSpanId);\n            $input.attr('aria-describedby', msgSpanId);\n        });\n    }\n\n    productReviewHandler() {\n        if (this.url.indexOf('#write_review') !== -1) {\n            this.$reviewLink.trigger('click');\n        }\n    }\n\n    bulkPricingHandler() {\n        if (this.url.indexOf('#bulk_pricing') !== -1) {\n            this.$bulkPricingLink.trigger('click');\n        }\n    }\n}\n","export class VideoGallery {\n    constructor($element) {\n        this.$player = $element.find('[data-video-player]');\n        this.$videos = $element.find('[data-video-item]');\n        this.currentVideo = {};\n        this.bindEvents();\n    }\n\n    selectNewVideo(e) {\n        e.preventDefault();\n\n        const $target = $(e.currentTarget);\n\n        this.currentVideo = {\n            id: $target.data('videoId'),\n            $selectedThumb: $target,\n        };\n\n        this.setMainVideo();\n        this.setActiveThumb();\n    }\n\n    setMainVideo() {\n        this.$player.attr('src', `//www.youtube.com/embed/${this.currentVideo.id}`);\n    }\n\n    setActiveThumb() {\n        this.$videos.removeClass('is-active');\n        this.currentVideo.$selectedThumb.addClass('is-active');\n    }\n\n    bindEvents() {\n        this.$videos.on('click', this.selectNewVideo.bind(this));\n    }\n}\n\nexport default function videoGallery() {\n    const pluginKey = 'video-gallery';\n    const $videoGallery = $(`[data-${pluginKey}]`);\n\n    $videoGallery.each((index, element) => {\n        const $el = $(element);\n        const isInitialized = $el.data(pluginKey) instanceof VideoGallery;\n\n        if (isInitialized) {\n            return;\n        }\n\n        $el.data(pluginKey, new VideoGallery($el));\n    });\n}\n","/**\n * IntuitSolutions - Custom JS that fires on the PDP\n */\n\nexport default class ITSProduct {\n    constructor(context) {\n    }\n}\n","/**\n * Natural Dual Panel Behavior\n * - Uses CSS sticky positioning for natural flow\n * - Right panel sticks until its content ends\n * - Page flows naturally: header -> dual-panel -> related products -> footer\n * - No artificial \"unlocking\" or complex scroll management\n */\n\nexport default class NaturalDualPanel {\n    constructor() {\n        this.container = document.querySelector('.dual-panel-container');\n        this.detailsPanel = document.querySelector('.details-panel');\n        \n        if (!this.container || !this.detailsPanel) {\n            return;\n        }\n\n        this.isDesktop = window.matchMedia('(min-width: 1025px)').matches;\n        this.init();\n    }\n\n    init() {\n        if (!this.isDesktop) {\n            this.enableMobileLayout();\n            return;\n        }\n\n        // Enable natural scrolling - no artificial scroll blocking\n        document.body.style.overflow = 'auto';\n        \n        // Handle window resize\n        window.addEventListener('resize', this.handleResize.bind(this));\n        \n        // Ensure proper sticky behavior\n        this.setupStickyBehavior();\n        \n        // Setup quantity selector functions\n        this.setupQuantitySelector();\n    }\n\n    setupStickyBehavior() {\n        // Ensure the sticky positioning works correctly\n        // by making sure the parent has proper height\n        if (this.container) {\n            this.container.style.position = 'relative';\n        }\n    }\n\n    setupQuantitySelector() {\n        // The theme's native quantity selector uses data-quantity-change\n        // and is handled by the product-details.js listenQuantityChange() method\n        // We just need to ensure it works properly in our split layout\n        \n        const quantityContainer = document.querySelector('[data-quantity-change]');\n        if (quantityContainer) {\n            // Ensure the native theme functionality is properly initialized\n            // The theme handles this automatically through product-details.js\n        }\n    }\n\n    enableMobileLayout() {\n        // For mobile - ensure normal document flow\n        document.body.style.overflow = 'auto';\n        \n        if (this.container) {\n            this.container.style.position = 'relative';\n        }\n        \n        if (this.detailsPanel) {\n            this.detailsPanel.style.position = 'relative';\n            this.detailsPanel.style.top = 'auto';\n        }\n    }\n\n    handleResize() {\n        const wasDesktop = this.isDesktop;\n        this.isDesktop = window.matchMedia('(min-width: 1025px)').matches;\n        \n        if (wasDesktop !== this.isDesktop) {\n            this.init();\n        }\n    }\n}\n\n// Initialize when DOM is ready\ndocument.addEventListener('DOMContentLoaded', () => {\n    new NaturalDualPanel();\n});\n","/**\n * Split Layout Carousel Override\n * Forces vertical thumbnail layout for split layout product pages\n */\n\nexport default class SplitLayoutCarousel {\n    constructor() {\n        // EMERGENCY: Block this entire class for volleyball nets page\n        if (window.customVolleyballNetsPage || window.blockAllCarousels || window.emergencyCarouselProtection) {\n            console.log('SPLIT-LAYOUT-CAROUSEL: Completely blocked for volleyball nets page');\n            // Return safe, non-functional methods\n            this.init = () => { console.log('SplitLayoutCarousel.init() blocked'); };\n            this.destroy = () => { console.log('SplitLayoutCarousel.destroy() blocked'); };\n            this.update = () => { console.log('SplitLayoutCarousel.update() blocked'); };\n            return;\n        }\n\n        this.initCarouselOverride();\n        this.init(); // Initialize test helpers\n    }\n\n    initCarouselOverride() {\n        // Pre-DOM ready setup for split layouts to prevent FOUC\n        this.setupPreInitialization();\n        \n        // Wait for DOM to be ready\n        $(document).ready(() => {\n            this.enforceVerticalLayout();\n            \n            // Re-enforce after any slick initialization\n            setTimeout(() => {\n                // console.log('Re-enforcing layout after 500ms delay');\n                this.enforceVerticalLayout();\n            }, 500);\n            \n            // Also enforce after window resize\n            $(window).on('resize', () => {\n                setTimeout(() => {\n                    this.enforceVerticalLayout();\n                }, 100);\n            });\n            \n            // Set up a fallback to ensure handlers are always set up\n            setTimeout(() => {\n                this.setupNavigationHandlers($('.productView.split-layout'));\n            }, 1000);\n            \n            // Set up swipe functionality after a delay to ensure everything is loaded\n            setTimeout(() => {\n                // console.log('Setting up swipe functionality');\n                this.setupMainImageSwipe();\n            }, 1200);\n        });\n    }\n    \n    setupPreInitialization() {\n        // Early intervention before DOM ready for split layouts\n        if (document.readyState === 'loading') {\n            document.addEventListener('DOMContentLoaded', () => {\n                this.preInitializeLayout();\n                this.interceptSlickInitialization();\n            });\n        } else {\n            this.preInitializeLayout();\n            this.interceptSlickInitialization();\n        }\n    }\n    \n    interceptSlickInitialization() {\n        // Override Slick initialization for split layouts to prevent size jumping\n        const originalSlick = $.fn.slick;\n        const self = this;\n        \n        $.fn.slick = function(options) {\n            // Check if this is a split layout thumbnail carousel\n            if (this.hasClass('productView-thumbnails') && this.closest('.productView.split-layout').length > 0) {\n                // console.log('Intercepting Slick initialization for split layout');\n                \n                // Apply our fixes BEFORE Slick initializes\n                self.applyImmediateLayoutFixes(this);\n                \n                // Override Slick options for split layout - FORCE VERTICAL\n                const isDesktop = window.innerWidth > 768;\n                const splitLayoutOptions = {\n                    ...options,\n                    infinite: false,\n                    arrows: false,\n                    dots: false,\n                    variableWidth: false,\n                    adaptiveHeight: false,\n                    slidesToShow: isDesktop ? 1 : 4,\n                    slidesToScroll: 1,\n                    vertical: isDesktop,\n                    verticalSwiping: isDesktop,\n                    // Force these settings\n                    centerMode: false,\n                    focusOnSelect: false,\n                    responsive: isDesktop ? [] : [\n                        {\n                            breakpoint: 768,\n                            settings: {\n                                vertical: false,\n                                verticalSwiping: false,\n                                slidesToShow: 4,\n                                horizontal: true\n                            }\n                        }\n                    ]\n                };\n                \n\n                \n                // Initialize Slick with our options\n                const result = originalSlick.call(this, splitLayoutOptions);\n                \n                // Apply our fixes AFTER Slick initializes\n                setTimeout(() => {\n                    self.enforceVerticalLayout();\n                }, 0);\n                \n                return result;\n            }\n            \n            // For non-split layout carousels, use original Slick\n            return originalSlick.call(this, options);\n        };\n        \n        // Copy over any static properties\n        Object.keys(originalSlick).forEach(key => {\n            $.fn.slick[key] = originalSlick[key];\n        });\n    }\n    \n    preInitializeLayout() {\n        // Apply initial styles before Slick has a chance to initialize\n        const $splitLayout = $('.productView.split-layout');\n        if ($splitLayout.length === 0) return;\n        \n        const $thumbnails = $splitLayout.find('.productView-thumbnails');\n        if ($thumbnails.length === 0) return;\n        \n        // console.log('Pre-initializing split layout before Slick initialization');\n        \n        // Set up event listeners to intercept Slick initialization\n        $thumbnails.on('beforeChange.splitLayout', (event, slick) => {\n            // console.log('Slick beforeChange event intercepted');\n            this.enforceVerticalLayout();\n        });\n        \n        // Apply immediate layout fixes\n        this.applyImmediateLayoutFixes($thumbnails);\n        \n        // Set up thumbnail click handlers early to override default behavior\n        this.setupThumbnailClickHandlers($('.productView.split-layout'));\n        \n        // Disable hover behavior early to prevent unwanted image changes\n        this.disableThumbnailHover($('.productView.split-layout'));\n        \n        // Set up main image swipe for mobile\n        this.setupMainImageSwipe();\n    }\n    \n    applyImmediateLayoutFixes($thumbnails) {\n        const isMobile = window.innerWidth <= 768;\n        \n        // console.log('Applying immediate layout fixes for split layout - AGGRESSIVE MODE');\n        \n        // Apply CSS classes instead of inline styles\n        $thumbnails.addClass('carousel-initialized');\n        \n        // Set responsive state classes\n        if (isMobile) {\n            $thumbnails.removeClass('carousel-desktop').addClass('carousel-mobile');\n        } else {\n            $thumbnails.removeClass('carousel-mobile').addClass('carousel-desktop');\n        }\n        \n        // Set image attributes for proper sizing (keep this for img elements)\n        const imageSelectors = [\n            'img',\n            'li img', \n            '.slick-slide img',\n            '.productView-thumbnail img',\n            '.productView-thumbnail-link img'\n        ];\n        \n        imageSelectors.forEach(selector => {\n            $thumbnails.find(selector).each(function() {\n                // Only set HTML attributes, not inline styles\n                this.setAttribute('width', '80');\n                this.setAttribute('height', '80');\n            });\n        });\n        \n        // console.log('Applied immediate layout fixes for split layout - COMPLETE');\n    }\n\n    enforceVerticalLayout() {\n        const $splitLayout = $('.productView.split-layout');\n        \n        if ($splitLayout.length === 0) return;\n        \n        const $thumbnails = $splitLayout.find('.productView-thumbnails');\n        \n        if ($thumbnails.length === 0) return;\n\n        // FORCE HIDE ALL SLICK ARROWS\n        $thumbnails.find('.slick-prev, .slick-next, .slick-arrow, button.slick-prev, button.slick-next, button.slick-arrow').remove();\n        \n        // Set CSS classes for carousel initialization\n        $thumbnails.addClass('carousel-initialized');\n        \n        const isMobile = window.innerWidth <= 768;\n        \n        // console.log(`Enforcing layout for split layout - Mobile: ${isMobile}`);\n        \n        // All products now use Slick mode - apply layout based on screen size\n        const $slickTrack = $thumbnails.find('.slick-track');\n        \n        // Set responsive state classes (CSS handles all styling)\n            if (isMobile) {\n            $thumbnails.removeClass('carousel-desktop').addClass('carousel-mobile');\n            } else {\n            $thumbnails.removeClass('carousel-mobile').addClass('carousel-desktop');\n        }\n        \n        // AGGRESSIVELY remove any inline width styles that Slick applies\n        const removeInlineWidths = () => {\n            $slickTrack.each(function() {\n                if (this.style) {\n                    this.style.removeProperty('width');\n                    this.style.removeProperty('min-width');\n                    this.style.removeProperty('max-width');\n                }\n            });\n            \n            $thumbnails.find('.slick-slide').each(function() {\n                if (this.style) {\n                    this.style.removeProperty('width');\n                    this.style.removeProperty('min-width'); \n                    this.style.removeProperty('max-width');\n                }\n            });\n        };\n        \n        // Remove immediately and repeatedly\n        removeInlineWidths();\n        setTimeout(removeInlineWidths, 100);\n        setTimeout(removeInlineWidths, 500);\n        \n        // Set up a MutationObserver to watch for style changes\n        if (window.MutationObserver && $slickTrack.length > 0) {\n            const observer = new MutationObserver(() => {\n                removeInlineWidths();\n            });\n            \n            $slickTrack.each(function() {\n                observer.observe(this, { \n                    attributes: true, \n                    attributeFilter: ['style'] \n                });\n            });\n        }\n        \n        // Listen for slick events (all products use Slick now)\n        // If slick isn't initialized yet, listen for it\n        $thumbnails.on('init', (event, slick) => {\n            // console.log('Slick carousel initialized, enforcing layout');\n            setTimeout(() => {\n                this.enforceVerticalLayout();\n            }, 50);\n        });\n        \n        // Also listen for reInit\n        $thumbnails.on('reInit', (event, slick) => {\n            // console.log('Slick carousel reinitialized, enforcing layout');\n            setTimeout(() => {\n                this.enforceVerticalLayout();\n            }, 50);\n        });\n        \n        // Listen for breakpoint changes\n        $thumbnails.on('breakpoint', (event, slick) => {\n            // console.log('Slick carousel breakpoint changed, enforcing layout');\n            setTimeout(() => {\n                this.enforceVerticalLayout();\n            }, 50);\n        });\n        \n        // Add click handlers for custom navigation arrows\n        this.setupNavigationHandlers($splitLayout);\n        \n        // Add mobile-specific handlers\n        this.setupMobileHandlers($splitLayout);\n        \n        // Override thumbnail click behavior for split layout\n        this.setupThumbnailClickHandlers($splitLayout);\n        \n        // Disable hover behavior for split layout thumbnails\n        this.disableThumbnailHover($splitLayout);\n        \n        // Set up main image swipe for mobile\n        this.setupMainImageSwipe();\n        \n        // Update handlers on window resize\n        $(window).on('resize', () => {\n            setTimeout(() => {\n                this.setupMobileHandlers($splitLayout);\n                this.setupMainImageSwipe(); // Re-setup swipe on resize\n            }, 100);\n        });\n    }\n    \n    setupNavigationHandlers($splitLayout) {\n        const $thumbnails = $splitLayout.find('.productView-thumbnails');\n        \n\n        \n        // Use document-level delegation to capture clicks on the thumbnail container\n        $(document).off('click.split-layout-pseudo');\n        \n        // Handle clicks on the thumbnails container to detect pseudo-element areas\n        $(document).on('click.split-layout-pseudo', '.productView.split-layout .productView-thumbnails', (e) => {\n            e.preventDefault();\n            \n            const $container = $(e.currentTarget);\n            const containerRect = $container[0].getBoundingClientRect();\n            const clickY = e.clientY;\n            const containerTop = containerRect.top;\n            const containerBottom = containerRect.bottom;\n            \n            // Define arrow areas - top 40px and bottom 40px of container\n            const arrowHeight = 40;\n            const upArrowBottom = containerTop + arrowHeight;\n            const downArrowTop = containerBottom - arrowHeight;\n            \n\n            \n            const $currentSplitLayout = $container.closest('.productView.split-layout');\n            const $slickList = $container.find('.slick-list');\n            \n                        if ($slickList.length === 0) {\n                return;\n            }\n            \n            // Check if click is in the up arrow area (::before)\n            if (clickY >= containerTop && clickY <= upArrowBottom) {\n                // Use Slick's built-in navigation instead of manual scrolling\n                if ($container.hasClass('slick-initialized')) {\n                    $container.slick('slickPrev');\n                    this.updateScrollArrowVisibility($currentSplitLayout);\n                }\n            }\n            // Check if click is in the down arrow area (::after)\n            else if (clickY >= downArrowTop && clickY <= containerBottom) {\n                // Use Slick's built-in navigation instead of manual scrolling\n                if ($container.hasClass('slick-initialized')) {\n                    $container.slick('slickNext');\n                    this.updateScrollArrowVisibility($currentSplitLayout);\n                }\n            }\n        });\n        \n        // Update arrow visibility when Slick is initialized and on slide changes\n        $thumbnails.on('init afterChange', (event, slick) => {\n            setTimeout(() => {\n                this.updateScrollArrowVisibility($splitLayout);\n            }, 50);\n        });\n        \n        // ALTERNATIVE: Add direct click handlers to the arrow areas\n        // This is a backup method in case the pseudo-element detection doesn't work\n        try {\n            $thumbnails.each(function(index) {\n                const $thumb = $(this);\n                \n                // Create invisible overlay divs for the arrow areas\n                if ($thumb.find('.arrow-overlay-up, .arrow-overlay-down').length === 0) {\n                    const $upOverlay = $('<div class=\"arrow-overlay-up\" style=\"position: absolute; top: 0; left: 0; right: 0; height: 40px; z-index: 25; cursor: pointer; background: transparent; pointer-events: auto;\"></div>');\n                    const $downOverlay = $('<div class=\"arrow-overlay-down\" style=\"position: absolute; bottom: 0; left: 0; right: 0; height: 40px; z-index: 25; cursor: pointer; background: transparent; pointer-events: auto;\"></div>');\n                    \n                    $thumb.css('position', 'relative').append($upOverlay, $downOverlay);\n                    \n                    $upOverlay.on('click', (e) => {\n                        // Only handle clicks that are NOT on thumbnail images or their containers\n                        const $target = $(e.target);\n                        \n                        if ($target.is('img') || $target.closest('[data-image-gallery-item]').length > 0 || $target.hasClass('productView-thumbnail')) {\n                            // Let thumbnail clicks pass through\n                            return;\n                        }\n                        \n                        e.preventDefault();\n                        e.stopPropagation();\n                        \n                        // Direct scrolling approach - bypass Slick completely\n                        const $slickList = $thumb.find('.slick-list');\n                        \n                        if ($slickList.length > 0) {\n                            const currentScrollTop = $slickList.scrollTop();\n                            const scrollAmount = 88; // thumbnail height (80px) + gap (8px)\n                            const newScrollTop = Math.max(0, currentScrollTop - scrollAmount);\n                            \n                            $slickList.animate({\n                                scrollTop: newScrollTop\n                            }, 300);\n                        }\n                    });\n                    \n                    $downOverlay.on('click', (e) => {\n                        // Only handle clicks that are NOT on thumbnail images or their containers\n                        const $target = $(e.target);\n                        \n                        if ($target.is('img') || $target.closest('[data-image-gallery-item]').length > 0 || $target.hasClass('productView-thumbnail')) {\n                            // Let thumbnail clicks pass through\n                            return;\n                        }\n                        \n                        e.preventDefault();\n                        e.stopPropagation();\n                        \n                        // Direct scrolling approach - bypass Slick completely\n                        const $slickList = $thumb.find('.slick-list');\n                        \n                        if ($slickList.length > 0) {\n                            const currentScrollTop = $slickList.scrollTop();\n                            const scrollAmount = 88; // thumbnail height (80px) + gap (8px)\n                            const maxScrollTop = $slickList[0].scrollHeight - $slickList.outerHeight();\n                            const newScrollTop = Math.min(maxScrollTop, currentScrollTop + scrollAmount);\n                            \n                            $slickList.animate({\n                                scrollTop: newScrollTop\n                            }, 300);\n                        }\n                    });\n                }\n            });\n        } catch (error) {\n            console.error('Error setting up overlay handlers:', error);\n        }\n    }\n    \n    updateScrollArrowVisibility($splitLayout) {\n        const $thumbnails = $splitLayout.find('.productView-thumbnails');\n        \n        if (!$thumbnails.hasClass('slick-initialized')) {\n            // Slick not initialized yet\n            $thumbnails.removeClass('can-scroll-up can-scroll-down');\n            return;\n        }\n        \n        // Get Slick instance data\n        const slickData = $thumbnails.slick('getSlick');\n        if (!slickData) return;\n        \n        const currentSlide = slickData.currentSlide;\n        const slideCount = slickData.slideCount;\n        const slidesToShow = slickData.options.slidesToShow;\n        \n\n        \n        if (slideCount <= slidesToShow) {\n            // All slides are visible - hide both arrows\n            $thumbnails.removeClass('can-scroll-up can-scroll-down');\n            return;\n        }\n        \n        // Show/hide up arrow (::before) based on current slide\n        if (currentSlide <= 0) {\n            // At or near the first slide - hide up arrow\n            $thumbnails.removeClass('can-scroll-up');\n        } else {\n            // Not at first slide - show up arrow\n            $thumbnails.addClass('can-scroll-up');\n        }\n        \n        // Show/hide down arrow (::after) based on current slide\n        if (currentSlide >= slideCount - slidesToShow) {\n            // At or near the last slide - hide down arrow\n            $thumbnails.removeClass('can-scroll-down');\n        } else {\n            // Not at last slide - show down arrow\n            $thumbnails.addClass('can-scroll-down');\n        }\n    }\n    \n    setupMobileHandlers($splitLayout) {\n        // Only set up mobile handlers on mobile devices\n        if (window.innerWidth > 768) return;\n        \n        const $thumbnails = $splitLayout.find('.productView-thumbnails');\n        // console.log('Setting up mobile horizontal scroll handlers');\n        \n        // Handle horizontal scroll for mobile\n        $(document).off('click.mobile-horizontal');\n        \n        $(document).on('click.mobile-horizontal', '.productView.split-layout .productView-thumbnails', (e) => {\n            // Only on mobile\n            if (window.innerWidth > 768) return;\n            \n            e.preventDefault();\n            \n            const $container = $(e.currentTarget);\n            const containerRect = $container[0].getBoundingClientRect();\n            const clickX = e.clientX - containerRect.left;\n            const containerWidth = containerRect.width;\n            \n            // Define click zones for horizontal scrolling\n            const arrowWidth = 40; // Width of the horizontal arrows\n            const leftArrowZone = arrowWidth;\n            const rightArrowZone = containerWidth - arrowWidth;\n            \n            // console.log('Mobile horizontal click detected:', {\n            //     clickX,\n            //     containerWidth,\n            //     leftArrowZone,\n            //     rightArrowZone\n            // });\n            \n            const $slickList = $container.find('.slick-list');\n            if ($slickList.length === 0) return;\n            \n            if (clickX <= leftArrowZone) {\n                // Clicked in left arrow area - scroll left\n                // console.log('Mobile left arrow area clicked');\n                const currentScrollLeft = $slickList.scrollLeft();\n                const scrollAmount = 92; // thumbnail width (80px) + gap (12px)\n                const newScrollLeft = Math.max(0, currentScrollLeft - scrollAmount);\n                \n                $slickList.animate({ scrollLeft: newScrollLeft }, 300, () => {\n                    this.updateMobileArrowVisibility($splitLayout);\n                });\n                \n            } else if (clickX >= rightArrowZone) {\n                // Clicked in right arrow area - scroll right\n                // console.log('Mobile right arrow area clicked');\n                const currentScrollLeft = $slickList.scrollLeft();\n                const scrollAmount = 92; // thumbnail width (80px) + gap (12px)\n                const maxScrollLeft = $slickList[0].scrollWidth - $slickList.outerWidth();\n                const newScrollLeft = Math.min(maxScrollLeft, currentScrollLeft + scrollAmount);\n                \n                $slickList.animate({ scrollLeft: newScrollLeft }, 300, () => {\n                    this.updateMobileArrowVisibility($splitLayout);\n                });\n            }\n        });\n        \n        // Set up mobile arrow visibility\n        $thumbnails.on('init', (event, slick) => {\n            if (window.innerWidth <= 768) {\n                setTimeout(() => {\n                    this.updateMobileArrowVisibility($splitLayout);\n                    \n                    const $slickList = $splitLayout.find('.slick-list');\n                    if ($slickList.length > 0) {\n                        $slickList.on('scroll', () => {\n                            this.updateMobileArrowVisibility($splitLayout);\n                        });\n                    }\n                }, 100);\n            }\n        });\n    }\n    \n    updateMobileArrowVisibility($splitLayout) {\n        if (window.innerWidth > 768) return; // Only for mobile\n        \n        const $thumbnails = $splitLayout.find('.productView-thumbnails');\n        const $slickList = $splitLayout.find('.slick-list');\n        \n        if ($slickList.length === 0) return;\n        \n        const scrollLeft = $slickList.scrollLeft();\n        const scrollWidth = $slickList[0].scrollWidth;\n        const clientWidth = $slickList.outerWidth();\n        const maxScrollLeft = scrollWidth - clientWidth;\n        const isScrollable = scrollWidth > clientWidth;\n        \n        // console.log('Updating mobile horizontal arrow visibility:', {\n        //     scrollLeft,\n        //     scrollWidth,\n        //     clientWidth,\n        //     maxScrollLeft,\n        //     isScrollable\n        // });\n        \n        if (!isScrollable) {\n            $thumbnails.removeClass('can-scroll-left can-scroll-right');\n            return;\n        }\n        \n        // Show/hide left arrow\n        if (scrollLeft <= 5) {\n            $thumbnails.removeClass('can-scroll-left');\n        } else {\n            $thumbnails.addClass('can-scroll-left');\n        }\n        \n        // Show/hide right arrow\n        if (scrollLeft >= maxScrollLeft - 5) {\n            $thumbnails.removeClass('can-scroll-right');\n        } else {\n            $thumbnails.addClass('can-scroll-right');\n        }\n    }\n    \n    setupThumbnailClickHandlers($splitLayout) {\n        // Remove existing thumbnail click handlers that open PhotoSwipe\n        const $thumbnails = $splitLayout.find('.productView-thumbnails');\n        \n        // Unbind existing click AND hover handlers from image gallery\n        $thumbnails.find('[data-image-gallery-item], [data-image-gallery-video]').off('click mouseenter');\n        \n        // Add our custom click handler for thumbnails\n        $(document).off('click.split-layout-thumbnails');\n        $(document).on('click.split-layout-thumbnails', '.productView.split-layout .productView-thumbnails [data-image-gallery-item], .productView.split-layout .productView-thumbnails [data-image-gallery-video]', (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            \n            const $target = $(e.currentTarget);\n            const type = $target.attr('data-type');\n            \n            // Try to find the image gallery instance from the global product details\n            let imageGallery = null;\n            \n            // Check if there's a global product details instance\n            if (window.productDetails && window.productDetails.imageGallery) {\n                imageGallery = window.productDetails.imageGallery;\n            }\n            \n            // Alternative: check if it's stored on the productView element\n            if (!imageGallery) {\n                const $productView = $target.closest('.productView');\n                imageGallery = $productView.data('imageGallery');\n            }\n            \n            if (imageGallery && typeof imageGallery.selectNewImage === 'function') {\n                // Use the existing selectNewImage method to change the main image\n                try {\n                    imageGallery.selectNewImage(e);\n                } catch (error) {\n                    // Fallback to manual method\n                    this.changeMainImageManually($target, type);\n                }\n            } else {\n                // Fallback: manually change the main image\n                this.changeMainImageManually($target, type);\n            }\n        });\n    }\n    \n    disableThumbnailHover($splitLayout) {\n        // Continuously disable hover functionality for split layout thumbnails\n        const $thumbnails = $splitLayout.find('.productView-thumbnails');\n        \n        // console.log('Disabling thumbnail hover for split layout');\n        \n        // Remove any hover event listeners\n        $thumbnails.find('[data-image-gallery-item], [data-image-gallery-video]').off('mouseenter mouseover hover');\n        \n        // Add a no-op hover handler to prevent future hover events\n        $(document).off('mouseenter.split-layout-no-hover');\n        $(document).on('mouseenter.split-layout-no-hover', '.productView.split-layout .productView-thumbnails [data-image-gallery-item], .productView.split-layout .productView-thumbnails [data-image-gallery-video]', (e) => {\n            // Prevent hover from changing main image\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            return false;\n        });\n        \n        // console.log('Thumbnail hover disabled for split layout');\n    }\n    \n    changeMainImageManually($target, type) {\n        // Manual method to change main image if image gallery instance is not available\n        const $mainImage = $('.productView-image [data-main-image]');\n        const $mainImageContainer = $('.productView-image .productView-img-container a');\n        \n        if ($mainImage.length === 0) return;\n        \n        // Get the new image data from the thumbnail\n        const newImageUrl = $target.attr(`data-${type}-gallery-new-image-url`);\n        const newImageSrcset = $target.attr(`data-${type}-gallery-new-image-srcset`);\n        const zoomImageUrl = $target.attr(`data-${type}-gallery-zoom-image-url`);\n        const imageAlt = $target.find('img').attr('alt');\n        const imageIndex = $target.attr('data-index');\n        \n        if (!newImageUrl) return;\n        \n        // Update the main image\n        $mainImage.attr({\n            src: newImageUrl,\n            srcset: newImageSrcset || '',\n            alt: imageAlt || '',\n            title: imageAlt || ''\n        });\n        \n        // Update the main image container link for PhotoSwipe\n        if ($mainImageContainer.length > 0) {\n            $mainImageContainer.attr({\n                'data-index': imageIndex,\n                'data-type': type,\n                'href': zoomImageUrl || newImageUrl\n            });\n        }\n        \n        // Update active thumbnail state\n        $('.productView-thumbnails [data-image-gallery-item], .productView-thumbnails [data-image-gallery-video]').removeClass('is-active');\n        $target.addClass('is-active');\n        \n        // Update the main image zoom functionality if it exists\n        const $zoomContainer = $('.productView-image [data-zoom-image]');\n        if ($zoomContainer.length > 0 && zoomImageUrl) {\n            $zoomContainer.attr('data-zoom-image', zoomImageUrl);\n        }\n        \n        console.log('Split Layout: Changed main image to index', imageIndex, 'src:', newImageUrl);\n    }\n    \n    setupMainImageSwipe() {\n        // console.log('Setting up main image swipe handlers');\n        \n        const $mainImageContainer = $('.productView.split-layout .productView-image .productView-img-container');\n        if ($mainImageContainer.length === 0) {\n            // console.log('No main image container found for swipe');\n            return;\n        }\n        \n        // console.log('Found main image container:', $mainImageContainer[0]);\n        \n        // Set up touch events for mobile and device emulation\n        let startX = null;\n        let startY = null;\n        let isScrolling = null;\n        \n        // Remove any existing swipe handlers\n        $mainImageContainer.off('.swipe');\n        \n        // Touch start\n        $mainImageContainer.on('touchstart.swipe', (e) => {\n            // console.log('Touch start detected on main image:', e.originalEvent);\n            const touch = e.originalEvent.touches[0];\n            startX = touch.clientX;\n            startY = touch.clientY;\n            isScrolling = null;\n            \n            // console.log('Touch start coordinates:', { startX, startY });\n            \n            // Add visual feedback\n            $mainImageContainer.css('opacity', '0.9');\n        });\n        \n        // Touch move\n        $mainImageContainer.on('touchmove.swipe', (e) => {\n            if (!startX || !startY) return;\n            \n            const touch = e.originalEvent.touches[0];\n            const deltaX = touch.clientX - startX;\n            const deltaY = touch.clientY - startY;\n            \n            // console.log('Touch move - deltas:', { deltaX, deltaY });\n            \n            // Determine if user is scrolling vertically or swiping horizontally\n            if (isScrolling === null) {\n                isScrolling = Math.abs(deltaY) > Math.abs(deltaX);\n                // console.log('Determined scrolling direction:', isScrolling ? 'vertical' : 'horizontal');\n            }\n            \n            // If horizontal swipe, prevent default scrolling\n            if (!isScrolling && Math.abs(deltaX) > 10) {\n                e.preventDefault();\n                // console.log('Horizontal swipe detected, preventing default');\n                \n                // Add visual feedback during swipe\n                const translateX = deltaX * 0.1; // Subtle movement feedback\n                $mainImageContainer.css('transform', `translateX(${translateX}px)`);\n            }\n        });\n        \n        // Touch end\n        $mainImageContainer.on('touchend.swipe', (e) => {\n            // console.log('Touch end detected on main image');\n            \n            // Remove visual feedback\n            $mainImageContainer.css({\n                'opacity': '1',\n                'transform': 'none'\n            });\n            \n            if (!startX || !startY || isScrolling) {\n                // console.log('Touch end - no swipe action (scrolling or no start position)');\n                startX = null;\n                startY = null;\n                isScrolling = null;\n                return;\n            }\n            \n            const touch = e.originalEvent.changedTouches[0];\n            const deltaX = touch.clientX - startX;\n            const deltaY = touch.clientY - startY;\n            \n            // Minimum swipe distance\n            const minSwipeDistance = 50;\n            \n            // console.log('Touch end - analyzing swipe:', { deltaX, deltaY, minSwipeDistance });\n            \n            // Check for horizontal swipe\n            if (Math.abs(deltaX) > minSwipeDistance && Math.abs(deltaY) < 100) {\n                if (deltaX > 0) {\n                    // Swipe right - go to previous image\n                    // console.log('Swipe right detected - going to previous image');\n                    this.navigateToImage('previous');\n                } else {\n                    // Swipe left - go to next image\n                    // console.log('Swipe left detected - going to next image');\n                    this.navigateToImage('next');\n                }\n            } else {\n                // console.log('No swipe action - insufficient distance or vertical movement');\n            }\n            \n            // Reset values\n            startX = null;\n            startY = null;\n            isScrolling = null;\n        });\n        \n        // Mouse events for desktop testing (when NOT in device emulation mode)\n        let mouseDown = false;\n        let mouseStartX = null;\n        let mouseStartY = null;\n        \n        // Only add mouse events if touch is NOT supported (pure desktop)\n        if (!('ontouchstart' in window)) {\n            // console.log('Touch not supported - adding mouse events for desktop testing');\n            \n            $mainImageContainer.on('mousedown.swipe', (e) => {\n                // console.log('Mouse down detected on main image (desktop mode)');\n                mouseDown = true;\n                mouseStartX = e.clientX;\n                mouseStartY = e.clientY;\n                $mainImageContainer.css('opacity', '0.9');\n                e.preventDefault();\n            });\n            \n            $mainImageContainer.on('mousemove.swipe', (e) => {\n                if (!mouseDown) return;\n                \n                const deltaX = e.clientX - mouseStartX;\n                const deltaY = e.clientY - mouseStartY;\n                \n                // Prevent text selection\n                e.preventDefault();\n                \n                // Visual feedback during drag\n                if (Math.abs(deltaX) > 10) {\n                    $mainImageContainer.css('transform', `translateX(${deltaX * 0.2}px)`);\n                }\n            });\n            \n            $mainImageContainer.on('mouseup.swipe', (e) => {\n                if (!mouseDown) return;\n                \n                // console.log('Mouse up detected on main image (desktop mode)');\n                mouseDown = false;\n                \n                // Reset visual feedback\n                $mainImageContainer.css({\n                    'opacity': '1',\n                    'transform': 'none'\n                });\n                \n                const deltaX = e.clientX - mouseStartX;\n                const deltaY = e.clientY - mouseStartY;\n                const minSwipeDistance = 50;\n                \n                // console.log('Mouse drag - analyzing swipe:', { deltaX, deltaY, minSwipeDistance });\n                \n                // Check for horizontal swipe\n                if (Math.abs(deltaX) > minSwipeDistance && Math.abs(deltaY) < 100) {\n                    if (deltaX > 0) {\n                        // Drag right - go to previous image\n                        // console.log('Mouse drag right detected - going to previous image');\n                        this.navigateToImage('previous');\n                    } else {\n                        // Drag left - go to next image\n                        // console.log('Mouse drag left detected - going to next image');\n                        this.navigateToImage('next');\n                    }\n                }\n            });\n            \n            // Handle mouse leave to reset state\n            $mainImageContainer.on('mouseleave.swipe', () => {\n                if (mouseDown) {\n                    mouseDown = false;\n                    $mainImageContainer.css({\n                        'opacity': '1',\n                        'transform': 'none'\n                    });\n                }\n            });\n        } else {\n            // console.log('Touch supported - skipping mouse events (will use touch events in device emulation)');\n        }\n        \n        // console.log('Main image swipe handlers set up');\n    }\n    \n    navigateToImage(direction) {\n        const $thumbnails = $('.productView.split-layout .productView-thumbnails');\n        const $allThumbnails = $thumbnails.find('[data-image-gallery-item], [data-image-gallery-video]');\n        const $currentActive = $allThumbnails.filter('.is-active');\n        \n        if ($allThumbnails.length === 0) return;\n        \n        let $nextThumbnail = null;\n        \n        if ($currentActive.length === 0) {\n            // No active thumbnail, start with first\n            $nextThumbnail = $allThumbnails.first();\n        } else {\n            const currentIndex = $allThumbnails.index($currentActive);\n            \n            if (direction === 'next') {\n                const nextIndex = (currentIndex + 1) % $allThumbnails.length;\n                $nextThumbnail = $allThumbnails.eq(nextIndex);\n            } else if (direction === 'previous') {\n                const prevIndex = currentIndex === 0 ? $allThumbnails.length - 1 : currentIndex - 1;\n                $nextThumbnail = $allThumbnails.eq(prevIndex);\n            }\n        }\n        \n        if ($nextThumbnail && $nextThumbnail.length > 0) {\n            // console.log(`Navigating to ${direction} image via swipe`);\n            \n            // Trigger click on the thumbnail to change the main image\n            const clickEvent = $.Event('click', {\n                currentTarget: $nextThumbnail[0],\n                preventDefault: function() {},\n                stopPropagation: function() {}\n            });\n            \n            const type = $nextThumbnail.attr('data-type');\n            \n            // Try to use image gallery instance first\n            let imageGallery = null;\n            if (window.productDetails && window.productDetails.imageGallery) {\n                imageGallery = window.productDetails.imageGallery;\n            }\n            \n            if (imageGallery && typeof imageGallery.selectNewImage === 'function') {\n                imageGallery.selectNewImage(clickEvent);\n            } else {\n                this.changeMainImageManually($nextThumbnail, type);\n            }\n        }\n    }\n    \n    // Helper method for testing swipe functionality from desktop console\n    testSwipe(direction = 'next') {\n        // console.log(`Testing swipe ${direction} from console`);\n        this.navigateToImage(direction);\n    }\n    \n    // Expose this instance globally for testing\n    init() {\n        window.splitLayoutCarousel = this;\n        // console.log('Split layout carousel instance exposed as window.splitLayoutCarousel');\n        // console.log('Test swipe with: window.splitLayoutCarousel.testSwipe(\"next\") or window.splitLayoutCarousel.testSwipe(\"previous\")');\n    }\n}\n","/**\n * Mobile Sticky Cart Validator\n * \n * Implements scroll-to-error and popup notification functionality\n * similar to VolleyballUSA.com. Only activates on mobile when \n * sticky cart is visible - won't interfere with desktop dual-panel scrolling.\n */\n\nexport default class MobileStickyCartValidator {\n    constructor() {\n        this.init();\n    }\n\n    init() {\n        this.setupClickHandler();\n        this.setupGlobalFunctions();\n    }\n\n    setupClickHandler() {\n        // Only handle clicks on mobile sticky cart add-to-cart button\n        $(document).on('click', '.sticky-cart-section-mobile #form-action-addToCart-mobile', (e) => {\n            \n            // Only proceed if sticky cart is visible (mobile/tablet view)\n            if ($('.sticky-cart-section-mobile').is(':visible')) {\n                const formId = $(e.target).attr('form') || 'productOptionsForm-inline';\n                const $form = $('#' + formId);\n                \n                \n                if ($form.length) {\n                    e.preventDefault();\n                    \n                    // Check for validation errors\n                    if (this.validateForm($form)) {\n                        $form.submit();\n                    } else {\n                        this.scrollToFirstValidationError($form);\n                    }\n                } else {\n                }\n            } else {\n            }\n        });\n    }\n\n    validateForm($form) {\n        // Check for required selects that haven't been selected\n        const $requiredSelects = $form.find('select[required]');\n        const $unselectedRequired = $requiredSelects.filter(function() {\n            return $(this).val() === '' || $(this).prop('selectedIndex') === 0;\n        });\n        \n        \n        return $unselectedRequired.length === 0;\n    }\n\n    scrollToFirstValidationError($form) {\n        \n        setTimeout(() => {\n            \n            // Look for existing form validation errors first\n            let $errorField = $form.find('.form-field--error').first();\n            \n            if ($errorField.length === 0) {\n                $errorField = $('.form-field--error').first();\n            }\n            \n            if ($errorField.length > 0) {\n                this.smoothScrollToElement($errorField, 'Error Field');\n            } else {\n                \n                // Find first unselected required option\n                const $unselectedRequired = $form.find('[data-product-attribute] select').filter(function() {\n                    const $select = $(this);\n                    const $attribute = $select.closest('[data-product-attribute]');\n                    const isRequired = $attribute.find('label').text().toLowerCase().includes('required') || \n                                     $select.attr('required') !== undefined;\n                    const isUnselected = $select.val() === '' || $select.prop('selectedIndex') === 0;\n                    \n                    if (isRequired && isUnselected) {\n                    }\n                    \n                    return isRequired && isUnselected;\n                }).first().closest('[data-product-attribute]');\n                \n                if ($unselectedRequired.length > 0) {\n                    this.smoothScrollToElement($unselectedRequired, 'Required Option');\n                } else {\n                    this.smoothScrollToElement($form, 'Form');\n                }\n            }\n        }, 100);\n    }\n\n    smoothScrollToElement($element, elementName = 'Element') {\n        if ($element.length) {\n            const currentScroll = $(window).scrollTop();\n            const elementOffset = $element.offset();\n            const targetScroll = elementOffset.top - 100;\n            \n            \n            $('html, body').animate({\n                scrollTop: targetScroll\n            }, {\n                duration: 600,\n                easing: 'swing',\n                start: function() {\n                },\n                complete: function() {\n                    \n                    // Add highlight effect\n                    $element.addClass('scroll-highlight');\n                    \n                    setTimeout(() => {\n                        $element.removeClass('scroll-highlight');\n                    }, 2000);\n                    \n                    // Show notification popup\n                    this.showRequiredOptionsNotification();\n                }.bind(this)\n            });\n        } else {\n        }\n    }\n\n    showRequiredOptionsNotification() {\n        \n        // Remove any existing notifications\n        $('.required-options-notification').remove();\n        \n        // Create notification HTML\n        const $notification = $(`\n            <div class=\"required-options-notification\">\n                <div class=\"notification-content\">\n                    <div class=\"notification-icon\">⚠️</div>\n                    <div class=\"notification-text\">\n                        <strong>Required Options Missing</strong>\n                        <p>Please select all required options before adding to cart</p>\n                        <small class=\"notification-hint\">Click to dismiss</small>\n                    </div>\n                    <button class=\"notification-close\">&times;</button>\n                </div>\n            </div>\n        `);\n        \n        // Add to body and show with fade effect\n        $('body').append($notification);\n        $notification.hide().fadeIn(400);\n        \n        // Click to dismiss entire notification\n        $notification.on('click', function(e) {\n            $(this).fadeOut(300, function() {\n                $(this).remove();\n            });\n        });\n        \n        // Close button (prevent event bubbling)\n        $notification.find('.notification-close').on('click', function(e) {\n            e.stopPropagation();\n            $(this).closest('.required-options-notification').fadeOut(300, function() {\n                $(this).remove();\n            });\n        });\n        \n        // Auto-dismiss after 5 seconds\n        setTimeout(() => {\n            $notification.fadeOut(400, function() {\n                $(this).remove();\n            });\n        }, 5000);\n        \n    }\n\n    setupGlobalFunctions() {\n        // Global test function for debugging\n        window.showRequiredOptionsNotification = this.showRequiredOptionsNotification.bind(this);\n        window.testNotification = () => {\n            this.showRequiredOptionsNotification();\n        };\n        \n    }\n}\n\n// Initialize when DOM is ready\ndocument.addEventListener('DOMContentLoaded', () => {\n    new MobileStickyCartValidator();\n});","$(document).ready(function() {\n    function initMainImageSlick() {\n        if (window.innerWidth > 768) return;\n        if (typeof $.fn.slick !== 'function') return;\n        if (!window.BCData || !window.BCData.product_images || !window.BCData.product_images.length) return;\n\n        var $mainImageDesktop = $('.main-image-desktop');\n        if (!$mainImageDesktop.length) return;\n        if ($('.main-image-slick').length) return;\n\n        var images = window.BCData.product_images;\n        var $slick = $('<div class=\"main-image-slick\"></div>');\n        images.forEach(function(img) {\n            var $slide = $('<div></div>');\n            var $figure = $('<figure class=\"productView-image\" data-image-gallery-main></figure>');\n            var $container = $('<div class=\"productView-img-container\"></div>');\n            var $a = $('<a></a>')\n                .attr('href', img.url_zoom)\n                .attr('data-type', 'image')\n                .attr('target', '_blank');\n            var $img = $('<img>')\n                .attr('src', img.url_zoom)\n                .attr('alt', img.alt || '');\n            $a.append($img);\n            $container.append($a);\n            $figure.append($container);\n            $slide.append($figure);\n            $slick.append($slide);\n        });\n        $mainImageDesktop.after($slick);\n        $slick.slick({\n            dots: true,\n            arrows: false,\n            infinite: true,\n            speed: 300,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            adaptiveHeight: true\n        });\n    }\n\n    let tries = 0;\n    const maxTries = 10;\n    const interval = setInterval(function() {\n        tries++;\n        initMainImageSlick();\n        if ($('.main-image-slick').length || tries >= maxTries) {\n            clearInterval(interval);\n        }\n    }, 200);\n});"],"sourceRoot":""}